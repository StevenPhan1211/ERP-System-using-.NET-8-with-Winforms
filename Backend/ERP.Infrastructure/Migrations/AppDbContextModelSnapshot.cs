// <auto-generated />
using System;
using ERP.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ERP.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ERP.Core.Entities.Allowance", b =>
                {
                    b.Property<int>("MaPC")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaPC"));

                    b.Property<decimal>("SoTien")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TenPhuCap")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaPC");

                    b.ToTable("PHUCAP", (string)null);
                });

            modelBuilder.Entity("ERP.Core.Entities.Authorisation", b =>
                {
                    b.Property<int>("MaQuyen")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaQuyen"));

                    b.Property<string>("TenQuyen")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaQuyen");

                    b.ToTable("QUYEN", (string)null);
                });

            modelBuilder.Entity("ERP.Core.Entities.Authorise", b =>
                {
                    b.Property<string>("MaVaiTro")
                        .HasColumnType("varchar(10)");

                    b.Property<int>("MaQuyen")
                        .HasColumnType("int");

                    b.Property<string>("HanhDong")
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaVaiTro", "MaQuyen");

                    b.HasIndex("MaQuyen");

                    b.ToTable("PHANQUYEN", (string)null);
                });

            modelBuilder.Entity("ERP.Core.Entities.AvailableStock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MaKho")
                        .HasColumnType("int");

                    b.Property<int>("MaSP")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime");

                    b.Property<int>("SoLuongTon")
                        .HasColumnType("int");

                    b.Property<string>("TenSP")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("MaKho");

                    b.HasIndex("MaSP");

                    b.ToTable("TONKHO", (string)null);
                });

            modelBuilder.Entity("ERP.Core.Entities.Customer", b =>
                {
                    b.Property<int>("MaKH")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaKH"));

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasColumnType("varchar(15)");

                    b.Property<string>("TenKhachHang")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TichDiem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("MaKH");

                    b.ToTable("KHACHHANG", (string)null);
                });

            modelBuilder.Entity("ERP.Core.Entities.DayType", b =>
                {
                    b.Property<int>("MaLoaiCong")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaLoaiCong"));

                    b.Property<double>("HeSo")
                        .HasColumnType("float");

                    b.Property<string>("TenLoaiCong")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaLoaiCong");

                    b.ToTable("LOAICONG", (string)null);
                });

            modelBuilder.Entity("ERP.Core.Entities.Department", b =>
                {
                    b.Property<int>("MaPhongBan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaPhongBan"));

                    b.Property<string>("TenPhongBan")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaPhongBan");

                    b.ToTable("PHONGBAN", (string)null);
                });

            modelBuilder.Entity("ERP.Core.Entities.EducationLevel", b =>
                {
                    b.Property<int>("MaTDHV")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaTDHV"));

                    b.Property<string>("TrinhDoHocVan")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaTDHV");

                    b.ToTable("TRINHDOHOCVAN", (string)null);
                });

            modelBuilder.Entity("ERP.Core.Entities.Employee", b =>
                {
                    b.Property<int>("MaNV")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaNV"));

                    b.Property<string>("CCCD")
                        .IsRequired()
                        .HasColumnType("varchar(12)");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("GioiTinh")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("MaBoPhan")
                        .HasColumnType("int");

                    b.Property<int>("MaChucVu")
                        .HasColumnType("int");

                    b.Property<int>("MaPhongBan")
                        .HasColumnType("int");

                    b.Property<int>("MaTDHV")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("date");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasColumnType("varchar(15)");

                    b.HasKey("MaNV");

                    b.HasIndex("MaBoPhan");

                    b.HasIndex("MaChucVu");

                    b.HasIndex("MaPhongBan");

                    b.HasIndex("MaTDHV");

                    b.ToTable("NHANSU", (string)null);
                });

            modelBuilder.Entity("ERP.Core.Entities.EmployeeAllowance", b =>
                {
                    b.Property<int>("MaPhuCapNV")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaPhuCapNV"));

                    b.Property<int>("MaNV")
                        .HasColumnType("int");

                    b.Property<int>("MaPC")
                        .HasColumnType("int");

                    b.Property<int>("Nam")
                        .HasColumnType("int");

                    b.Property<decimal>("SoTien")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Thang")
                        .HasColumnType("int");

                    b.HasKey("MaPhuCapNV");

                    b.HasIndex("MaNV");

                    b.HasIndex("MaPC");

                    b.ToTable("PHUCAPNV", (string)null);
                });

            modelBuilder.Entity("ERP.Core.Entities.Expense", b =>
                {
                    b.Property<int>("MaChi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaChi"));

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("MaNV")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayChi")
                        .HasColumnType("date");

                    b.Property<string>("NguoiChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("SoTien")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("MaChi");

                    b.HasIndex("MaNV");

                    b.ToTable("CHI", (string)null);
                });

            modelBuilder.Entity("ERP.Core.Entities.ExtraShift", b =>
                {
                    b.Property<int>("MaTangCa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaTangCa"));

                    b.Property<int>("MaLoaiCa")
                        .HasColumnType("int");

                    b.Property<int>("MaNV")
                        .HasColumnType("int");

                    b.Property<DateTime>("Ngay")
                        .HasColumnType("date");

                    b.Property<int>("SoGio")
                        .HasColumnType("int");

                    b.HasKey("MaTangCa");

                    b.HasIndex("MaLoaiCa");

                    b.HasIndex("MaNV");

                    b.ToTable("TANGCA", (string)null);
                });

            modelBuilder.Entity("ERP.Core.Entities.Insurance", b =>
                {
                    b.Property<int>("MaBH")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaBH"));

                    b.Property<string>("BenhVien")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LoaiBH")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<int>("MaNV")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayCap")
                        .HasColumnType("date");

                    b.Property<DateTime>("NgayHetHan")
                        .HasColumnType("date");

                    b.Property<string>("SoBH")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("TinhTrang")
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MaBH");

                    b.HasIndex("MaNV");

                    b.ToTable("BAOHIEM", (string)null);
                });

            modelBuilder.Entity("ERP.Core.Entities.Inventory", b =>
                {
                    b.Property<int>("MaKho")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaKho"));

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("NguoiQuanLy")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TenKho")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaKho");

                    b.ToTable("KHOHANG", (string)null);
                });

            modelBuilder.Entity("ERP.Core.Entities.JobTitle", b =>
                {
                    b.Property<int>("MaChucVu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaChucVu"));

                    b.Property<string>("TenChucVu")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaChucVu");

                    b.ToTable("CHUCVU", (string)null);
                });

            modelBuilder.Entity("ERP.Core.Entities.Product", b =>
                {
                    b.Property<int>("MaSP")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaSP"));

                    b.Property<long>("DonGia")
                        .HasColumnType("bigint");

                    b.Property<int>("MaMatHang")
                        .HasColumnType("int");

                    b.Property<int>("MaNCC")
                        .HasColumnType("int");

                    b.Property<string>("MoTa")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("NgayNhap")
                        .HasColumnType("datetime2");

                    b.Property<int>("SoLuongTon")
                        .HasColumnType("int");

                    b.Property<string>("TenSanPham")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("MaSP");

                    b.HasIndex("MaMatHang");

                    b.HasIndex("MaNCC");

                    b.ToTable("SANPHAM", (string)null);
                });

            modelBuilder.Entity("ERP.Core.Entities.ProductCategory", b =>
                {
                    b.Property<int>("MaMatHang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaMatHang"));

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<string>("TenMatHang")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("TongChiPhi")
                        .HasColumnType("bigint");

                    b.HasKey("MaMatHang");

                    b.ToTable("PHANLOAIMATHANG", (string)null);
                });

            modelBuilder.Entity("ERP.Core.Entities.ProviderEntity", b =>
                {
                    b.Property<int>("MaNCC")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaNCC"));

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("NguoiTiepNhan")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("TenNCC")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaNCC");

                    b.ToTable("NHACUNGCAP", (string)null);
                });

            modelBuilder.Entity("ERP.Core.Entities.Receipt", b =>
                {
                    b.Property<int>("MaHD")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaHD"));

                    b.Property<string>("LoaiHD")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("MaKH")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayLap")
                        .HasColumnType("datetime");

                    b.Property<string>("NguoiLap")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("TongTien")
                        .HasColumnType("bigint");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("MaHD");

                    b.HasIndex("MaKH");

                    b.ToTable("HOADON", (string)null);
                });

            modelBuilder.Entity("ERP.Core.Entities.ReceiptDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("ChietKhau")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("real")
                        .HasDefaultValue(0f);

                    b.Property<long>("DonGia")
                        .HasColumnType("bigint");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("MaHD")
                        .HasColumnType("int");

                    b.Property<int>("MaSP")
                        .HasColumnType("int");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<float>("VAT")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("real")
                        .HasDefaultValue(0.1f);

                    b.HasKey("Id");

                    b.HasIndex("MaHD");

                    b.HasIndex("MaSP");

                    b.ToTable("CHITIETHOADON", (string)null);
                });

            modelBuilder.Entity("ERP.Core.Entities.Revenue", b =>
                {
                    b.Property<int>("MaThu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaThu"));

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("MaNV")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayThu")
                        .HasColumnType("date");

                    b.Property<string>("NguoiThu")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("SoTien")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("MaThu");

                    b.HasIndex("MaNV");

                    b.ToTable("THU", (string)null);
                });

            modelBuilder.Entity("ERP.Core.Entities.Roles", b =>
                {
                    b.Property<string>("MaVaiTro")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("TenVaiTro")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaVaiTro");

                    b.ToTable("VAITRO", (string)null);
                });

            modelBuilder.Entity("ERP.Core.Entities.Salary", b =>
                {
                    b.Property<int>("MaLuong")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaLuong"));

                    b.Property<decimal>("LuongCoBan")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("MaNV")
                        .HasColumnType("int");

                    b.Property<int>("Nam")
                        .HasColumnType("int");

                    b.Property<int>("Thang")
                        .HasColumnType("int");

                    b.Property<decimal>("ThucLinh")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("decimal(18,2)")
                        .HasComputedColumnSql("[LuongCoBan] + [TongTC] + [TongPC]", true);

                    b.Property<decimal>("TongPC")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TongTC")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("MaLuong");

                    b.HasIndex("MaNV");

                    b.ToTable("LUONG", (string)null);
                });

            modelBuilder.Entity("ERP.Core.Entities.Section", b =>
                {
                    b.Property<int>("MaBoPhan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaBoPhan"));

                    b.Property<string>("TenBoPhan")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaBoPhan");

                    b.ToTable("BOPHAN", (string)null);
                });

            modelBuilder.Entity("ERP.Core.Entities.ShiftType", b =>
                {
                    b.Property<int>("MaLoaiCa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaLoaiCa"));

                    b.Property<string>("CaLamViec")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("HeSoTangCa")
                        .HasColumnType("float");

                    b.HasKey("MaLoaiCa");

                    b.ToTable("LOAICA", (string)null);
                });

            modelBuilder.Entity("ERP.Core.Entities.StockIn", b =>
                {
                    b.Property<int>("MaPhieuNhap")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaPhieuNhap"));

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("MaKho")
                        .HasColumnType("int");

                    b.Property<int>("MaNCC")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayNhap")
                        .HasColumnType("date");

                    b.HasKey("MaPhieuNhap");

                    b.HasIndex("MaKho");

                    b.HasIndex("MaNCC");

                    b.ToTable("NHAPKHO", (string)null);
                });

            modelBuilder.Entity("ERP.Core.Entities.StockInDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<long>("DonGia")
                        .HasColumnType("bigint");

                    b.Property<int>("MaPhieuNhap")
                        .HasColumnType("int");

                    b.Property<int>("MaSP")
                        .HasColumnType("int");

                    b.Property<int>("SoLuongNhap")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MaPhieuNhap");

                    b.HasIndex("MaSP");

                    b.ToTable("CHITIETNHAPKHO", (string)null);
                });

            modelBuilder.Entity("ERP.Core.Entities.StockOut", b =>
                {
                    b.Property<int>("MaPhieuXuat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaPhieuXuat"));

                    b.Property<string>("LyDoXuat")
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("MaKho")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayXuat")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiXuat")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaPhieuXuat");

                    b.HasIndex("MaKho");

                    b.ToTable("XUATKHO", (string)null);
                });

            modelBuilder.Entity("ERP.Core.Entities.StockOutDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("MaPhieuXuat")
                        .HasColumnType("int");

                    b.Property<int>("MaSP")
                        .HasColumnType("int");

                    b.Property<int>("SoLuongXuat")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MaPhieuXuat");

                    b.HasIndex("MaSP");

                    b.ToTable("CHITIETXUATKHO", (string)null);
                });

            modelBuilder.Entity("ERP.Core.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("MaVaiTro")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TenDangNhap")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("MaVaiTro");

                    b.HasIndex("MatKhau")
                        .IsUnique();

                    b.HasIndex("TenDangNhap")
                        .IsUnique();

                    b.ToTable("NGUOIDUNG", (string)null);
                });

            modelBuilder.Entity("ERP.Core.Entities.WorkRecord", b =>
                {
                    b.Property<int>("MaTinhCong")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaTinhCong"));

                    b.Property<TimeSpan>("GioRa")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("GioVao")
                        .HasColumnType("time");

                    b.Property<int>("MaLoaiCong")
                        .HasColumnType("int");

                    b.Property<int>("MaNhanVien")
                        .HasColumnType("int");

                    b.Property<DateTime>("Ngay")
                        .HasColumnType("datetime");

                    b.HasKey("MaTinhCong");

                    b.HasIndex("MaLoaiCong");

                    b.HasIndex("MaNhanVien");

                    b.ToTable("TINHCONG", (string)null);
                });

            modelBuilder.Entity("ERP.Core.Entities.Authorise", b =>
                {
                    b.HasOne("ERP.Core.Entities.Authorisation", "Authorisation")
                        .WithMany("Authorises")
                        .HasForeignKey("MaQuyen")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ERP.Core.Entities.Roles", "Roles")
                        .WithMany("Authorises")
                        .HasForeignKey("MaVaiTro")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Authorisation");

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("ERP.Core.Entities.AvailableStock", b =>
                {
                    b.HasOne("ERP.Core.Entities.Inventory", "Inventory")
                        .WithMany("AvailableStocks")
                        .HasForeignKey("MaKho")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ERP.Core.Entities.Product", "Product")
                        .WithMany("AvailableStocks")
                        .HasForeignKey("MaSP")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Inventory");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ERP.Core.Entities.Employee", b =>
                {
                    b.HasOne("ERP.Core.Entities.Section", "Section")
                        .WithMany("Employees")
                        .HasForeignKey("MaBoPhan")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ERP.Core.Entities.JobTitle", "JobTitle")
                        .WithMany("Employees")
                        .HasForeignKey("MaChucVu")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ERP.Core.Entities.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("MaPhongBan")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ERP.Core.Entities.EducationLevel", "EducationLevel")
                        .WithMany("Employees")
                        .HasForeignKey("MaTDHV")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("EducationLevel");

                    b.Navigation("JobTitle");

                    b.Navigation("Section");
                });

            modelBuilder.Entity("ERP.Core.Entities.EmployeeAllowance", b =>
                {
                    b.HasOne("ERP.Core.Entities.Employee", "Employee")
                        .WithMany("EmployeeAllowances")
                        .HasForeignKey("MaNV")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ERP.Core.Entities.Allowance", "Allowance")
                        .WithMany("EmployeeAllowances")
                        .HasForeignKey("MaPC")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Allowance");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("ERP.Core.Entities.Expense", b =>
                {
                    b.HasOne("ERP.Core.Entities.Employee", "Employee")
                        .WithMany("Expenses")
                        .HasForeignKey("MaNV")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("ERP.Core.Entities.ExtraShift", b =>
                {
                    b.HasOne("ERP.Core.Entities.ShiftType", "ShiftType")
                        .WithMany("ExtraShifts")
                        .HasForeignKey("MaLoaiCa")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ERP.Core.Entities.Employee", "Employee")
                        .WithMany("ExtraShifts")
                        .HasForeignKey("MaNV")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("ShiftType");
                });

            modelBuilder.Entity("ERP.Core.Entities.Insurance", b =>
                {
                    b.HasOne("ERP.Core.Entities.Employee", "Employee")
                        .WithMany("Insurances")
                        .HasForeignKey("MaNV")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("ERP.Core.Entities.Product", b =>
                {
                    b.HasOne("ERP.Core.Entities.ProductCategory", "ProductCategory")
                        .WithMany("Products")
                        .HasForeignKey("MaMatHang")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ERP.Core.Entities.ProviderEntity", "Provider")
                        .WithMany("Products")
                        .HasForeignKey("MaNCC")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ProductCategory");

                    b.Navigation("Provider");
                });

            modelBuilder.Entity("ERP.Core.Entities.Receipt", b =>
                {
                    b.HasOne("ERP.Core.Entities.Customer", "Customer")
                        .WithMany("Receipts")
                        .HasForeignKey("MaKH")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("ERP.Core.Entities.ReceiptDetail", b =>
                {
                    b.HasOne("ERP.Core.Entities.Receipt", "Receipt")
                        .WithMany("ReceiptDetails")
                        .HasForeignKey("MaHD")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ERP.Core.Entities.Product", "Product")
                        .WithMany("ReceiptDetails")
                        .HasForeignKey("MaSP")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Receipt");
                });

            modelBuilder.Entity("ERP.Core.Entities.Revenue", b =>
                {
                    b.HasOne("ERP.Core.Entities.Employee", "Employee")
                        .WithMany("Revenues")
                        .HasForeignKey("MaNV")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("ERP.Core.Entities.Salary", b =>
                {
                    b.HasOne("ERP.Core.Entities.Employee", "Employee")
                        .WithMany("Salaries")
                        .HasForeignKey("MaNV")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("ERP.Core.Entities.StockIn", b =>
                {
                    b.HasOne("ERP.Core.Entities.Inventory", "Inventory")
                        .WithMany("StockIns")
                        .HasForeignKey("MaKho")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ERP.Core.Entities.ProviderEntity", "Provider")
                        .WithMany("StockIns")
                        .HasForeignKey("MaNCC")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Inventory");

                    b.Navigation("Provider");
                });

            modelBuilder.Entity("ERP.Core.Entities.StockInDetail", b =>
                {
                    b.HasOne("ERP.Core.Entities.StockIn", "StockIn")
                        .WithMany("StockInDetails")
                        .HasForeignKey("MaPhieuNhap")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ERP.Core.Entities.Product", "Product")
                        .WithMany("StockInDetails")
                        .HasForeignKey("MaSP")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("StockIn");
                });

            modelBuilder.Entity("ERP.Core.Entities.StockOut", b =>
                {
                    b.HasOne("ERP.Core.Entities.Inventory", "Inventory")
                        .WithMany("StockOuts")
                        .HasForeignKey("MaKho")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Inventory");
                });

            modelBuilder.Entity("ERP.Core.Entities.StockOutDetail", b =>
                {
                    b.HasOne("ERP.Core.Entities.StockOut", "StockOut")
                        .WithMany("StockOutDetails")
                        .HasForeignKey("MaPhieuXuat")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ERP.Core.Entities.Product", "Product")
                        .WithMany("StockOutDetails")
                        .HasForeignKey("MaSP")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("StockOut");
                });

            modelBuilder.Entity("ERP.Core.Entities.User", b =>
                {
                    b.HasOne("ERP.Core.Entities.Roles", "Roles")
                        .WithMany("Users")
                        .HasForeignKey("MaVaiTro")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("ERP.Core.Entities.WorkRecord", b =>
                {
                    b.HasOne("ERP.Core.Entities.DayType", "DayType")
                        .WithMany("WorkRecords")
                        .HasForeignKey("MaLoaiCong")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ERP.Core.Entities.Employee", "Employee")
                        .WithMany("WorkRecords")
                        .HasForeignKey("MaNhanVien")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DayType");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("ERP.Core.Entities.Allowance", b =>
                {
                    b.Navigation("EmployeeAllowances");
                });

            modelBuilder.Entity("ERP.Core.Entities.Authorisation", b =>
                {
                    b.Navigation("Authorises");
                });

            modelBuilder.Entity("ERP.Core.Entities.Customer", b =>
                {
                    b.Navigation("Receipts");
                });

            modelBuilder.Entity("ERP.Core.Entities.DayType", b =>
                {
                    b.Navigation("WorkRecords");
                });

            modelBuilder.Entity("ERP.Core.Entities.Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("ERP.Core.Entities.EducationLevel", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("ERP.Core.Entities.Employee", b =>
                {
                    b.Navigation("EmployeeAllowances");

                    b.Navigation("Expenses");

                    b.Navigation("ExtraShifts");

                    b.Navigation("Insurances");

                    b.Navigation("Revenues");

                    b.Navigation("Salaries");

                    b.Navigation("WorkRecords");
                });

            modelBuilder.Entity("ERP.Core.Entities.Inventory", b =>
                {
                    b.Navigation("AvailableStocks");

                    b.Navigation("StockIns");

                    b.Navigation("StockOuts");
                });

            modelBuilder.Entity("ERP.Core.Entities.JobTitle", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("ERP.Core.Entities.Product", b =>
                {
                    b.Navigation("AvailableStocks");

                    b.Navigation("ReceiptDetails");

                    b.Navigation("StockInDetails");

                    b.Navigation("StockOutDetails");
                });

            modelBuilder.Entity("ERP.Core.Entities.ProductCategory", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ERP.Core.Entities.ProviderEntity", b =>
                {
                    b.Navigation("Products");

                    b.Navigation("StockIns");
                });

            modelBuilder.Entity("ERP.Core.Entities.Receipt", b =>
                {
                    b.Navigation("ReceiptDetails");
                });

            modelBuilder.Entity("ERP.Core.Entities.Roles", b =>
                {
                    b.Navigation("Authorises");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("ERP.Core.Entities.Section", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("ERP.Core.Entities.ShiftType", b =>
                {
                    b.Navigation("ExtraShifts");
                });

            modelBuilder.Entity("ERP.Core.Entities.StockIn", b =>
                {
                    b.Navigation("StockInDetails");
                });

            modelBuilder.Entity("ERP.Core.Entities.StockOut", b =>
                {
                    b.Navigation("StockOutDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
